{"ast":null,"code":"var _jsxFileName = \"D:\\\\Webprog\\\\proj-cah\\\\src\\\\InGame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Players from './Players';\nimport './InGame.css';\nimport axios from \"axios\";\nimport config from './config.json';\nimport Card from \"./Card\";\nimport { useTimer } from 'react-timer-hook';\nimport Timer from \"./Timer\";\nimport { Status } from \"./Status\";\nimport { Hilfe } from \"./Hilfe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InGame = props => {\n  _s();\n\n  let pointId = 0;\n  const playerData = props.pData;\n  const gameid = props.gId;\n  const [points, setPoints] = useState([]);\n  const [cards, setCards] = useState();\n  const [cardToOfferID, setCardToOfferID] = useState();\n  const [cardToOfferText, setCardToOfferText] = useState();\n  const [blackCard, setBlackCard] = useState();\n  const [czar, setCzar] = useState('loading');\n  const [expiryTimestamp, setExpiryTimestamp] = useState(Date.now() + 10000);\n  let pointArray;\n  let cardIdsArray = [];\n  let picksInBC;\n  let players = []; //'main method'\n\n  useEffect(() => {\n    refresh();\n    get_games();\n  }, []);\n\n  function get_games() {\n    axios.get(config.preUrl + 'games/').then(response => {\n      get_player_hirachy(response.data.games);\n    });\n  }\n\n  function get_player_hirachy(games) {\n    for (let i = 0; i < games.length; i++) {\n      if (games[i].id === gameid) {\n        players = games[i].players;\n      }\n    }\n  } // load offer preview and put it\n\n\n  function offerCard(cId, text) {\n    cardIdsArray.push(cId);\n    console.log(cId);\n    setCardToOfferID(cId);\n    setCardToOfferText(text);\n    console.log(picksInBC);\n    let picks = [];\n\n    for (let i = 0; i < cardIdsArray.length; i++) {\n      if (i > cardIdsArray.length - 1 - picksInBC) {\n        picks.push(cardIdsArray[i]);\n      }\n    }\n\n    if (picks.length = picksInBC) {\n      console.log('offeredCard');\n      putCard(picks);\n    }\n  } // load divs\n\n\n  function refresh() {\n    cardIdsArray = [];\n    voteCardIds = [];\n    pullPoints();\n    setCards(null);\n    setCardToOfferID(null);\n    setCardToOfferText(null);\n    setBlackCard(null);\n    setCzar('loading');\n    getBlackCard();\n    getCzar();\n  } // if czar no white cards\n\n\n  function getCzar() {\n    axios.get(config.preUrl + 'games/' + gameid).then(response => {\n      setCzar(response.data.czar);\n\n      if (response.data.czar.id !== playerData.id) {\n        getWhiteCards();\n      } else {\n        getWaitingPlayers();\n      }\n    });\n  } // pull player points\n\n\n  function pullPoints() {\n    axios.get(config.preUrl + 'games/' + gameid).then(response => {\n      createPoints(response.data.points);\n    });\n  } // map every Player point as a paragraph\n\n\n  function createPoints(pointArr) {\n    pointArray = pointArr;\n    var pList = [];\n    pList.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" \"\n    }, \"p1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 20\n    }, this));\n    pList.push(pointArr.map(point => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" : \", point, \" |\"]\n    }, pointId += 1, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 45\n    }, this)));\n    setPoints(pList);\n  } // renders White Cards of Player\n  // btnboo true => use btn rendernn false => vote btn rendern\n\n\n  function createWhiteCards(cardsArr, boo) {\n    let cList = [];\n    cList.push(cardsArr.map(eintrag => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        showBtn: true,\n        btnboo: boo,\n        voteCard: voteCard,\n        offerCard: offerCard,\n        pId: playerData.id,\n        gId: gameid,\n        cId: eintrag.id,\n        text: eintrag.text\n      }, eintrag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)));\n    setCards(cList);\n  } // pull white cards of Player to choose\n\n\n  function getWhiteCards() {\n    axios.get(config.preUrl + 'games/' + gameid + '/cards/' + playerData.id).then(response => {\n      console.log(response.data.cards);\n      createWhiteCards(response.data.cards, true);\n    });\n  } // pull black card\n\n\n  function getBlackCard() {\n    axios.get(config.preUrl + 'games/' + gameid).then(response => {\n      setBlackCard(response.data.currentBlackCard.text);\n      picksInBC = response.data.currentBlackCard.pick;\n    });\n  }\n\n  let voteCardIds = []; // callback from Vote button in Cards\n\n  function voteCard(cId) {\n    voteCardIds.push(cId);\n    let picks = [];\n\n    for (let i = 0; i < voteCardIds.length; i++) {\n      if (i > voteCardIds.length - 1 - picksInBC) {\n        picks.push(voteCardIds[i]);\n        console.log(voteCardIds[i]);\n      }\n    }\n\n    if (picks.length = picksInBC) {\n      console.log('voted');\n      putVoteCard(picks);\n    }\n  }\n\n  function putVoteCard(cIdArr) {\n    console.log('Vote');\n    let id_string = JSON.stringify(cIdArr);\n    let Jstring = `{\"cards\": ${id_string}}`;\n    const msg = JSON.parse(Jstring); // Ein axios-Aufruf, um die Abstimmung durchzufÃ¼hren\n\n    axios.put(config.preUrl + 'games/' + gameid + '/offers/' + playerData.id, msg).then(response => {\n      refresh();\n      console.log(response.data);\n    }).catch(error => {\n      console.error('Fehler beim Abstimmen:', error);\n    });\n  } // if points change refresh page\n\n\n  function waitForCzarToVote() {\n    axios.get(config.preUrl + 'games/' + gameid).then(response => {\n      if (JSON.stringify(response.data.points) === JSON.stringify(pointArray)) {\n        waitForCzarToVote();\n        console.log(response.data.points);\n        console.log(pointArray);\n        console.log('waiting_for_Czar');\n      } else {\n        refresh();\n        console.log('refreshing');\n      }\n    });\n  } // offer card to czar\n  // ----> put wechselt abgegebene Karten\n\n\n  function putCard(id) {\n    console.log(id); //console.log('player: ' + playerData.id + ' game: ' + gameid);\n\n    let id_string = JSON.stringify(id);\n    let Jstring = `{\"cards\": ${id_string}}`;\n    let msg = JSON.parse(Jstring);\n    axios.put(config.preUrl + 'games/' + gameid + '/cards/' + playerData.id, msg).then(response => {\n      waitForCzarToVote();\n    });\n  } // Timer timeout callback wenn czar dann get offers\n\n\n  async function onExpire() {\n    await timeout(2000);\n    console.log('expire'); //console.log('player: ' + playerData.id + ' game: ' + gameid);\n\n    if (czar.id === playerData.id) {\n      console.log('Player is Czar');\n      axios.get(config.preUrl + 'games/' + gameid + '/offers/' + playerData.id).then(response => {\n        console.log('creatingCzarCards');\n        createZarCards(response.data.offers, false);\n      });\n    } else {\n      console.log('Player is Not Czar');\n    }\n  }\n\n  function checkForPlayers(data) {\n    console.log(data.waitingForPlayers);\n\n    if (data.waitingForPlayers === 0) {\n      onExpire();\n    } else {\n      console.log('checking_for_players');\n      getWaitingPlayers();\n    }\n  } //wenn alle player cards abgegeben dann onExpire\n\n\n  function getWaitingPlayers() {\n    axios.get(config.preUrl + 'games/' + gameid).then(response => {\n      checkForPlayers(response.data);\n    });\n  }\n\n  function timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n  function createZarCards(cardsArr, boo) {\n    let cList = [];\n\n    for (let i = 0; i < cardsArr.length; i++) {\n      cList.push(cardsArr[i].map(eintrag => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          btnboo: boo,\n          showBtn: true,\n          voteCard: voteCard,\n          offerCard: offerCard,\n          pId: playerData.id,\n          gId: gameid,\n          cId: eintrag.id,\n          text: eintrag.text\n        }, eintrag.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }, this)));\n    }\n\n    setCards(cList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      align: \"center\",\n      id: \"title\",\n      children: [\" CARDS AGAINST HUMANITY: \", /*#__PURE__*/_jsxDEV(Status, {\n        gId: gameid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 67\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Hilfe, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 90\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapperPlayerPoints\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"players\",\n        children: /*#__PURE__*/_jsxDEV(Players, {\n          pData: playerData,\n          gId: gameid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"points\",\n        children: [\"Points:\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: points\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"blackCard\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"blText\",\n            children: blackCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"czar\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"czarLabel\",\n          children: \"Czar: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"czarNameLabel\",\n          children: [\" \", czar.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"answer\",\n        children: cardToOfferText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cards\",\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 9\n  }, this);\n}; //<div id=\"timer\"><Timer onExpire={onExpire} expiryTimestamp={expiryTimestamp} /></div>\n\n\n_s(InGame, \"+n68qPRQwxkMcVYSgDm16/jkKPM=\");\n\n_c = InGame;\nexport default InGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"InGame\");","map":{"version":3,"names":["React","useState","useEffect","Players","axios","config","Card","useTimer","Timer","Status","Hilfe","InGame","props","pointId","playerData","pData","gameid","gId","points","setPoints","cards","setCards","cardToOfferID","setCardToOfferID","cardToOfferText","setCardToOfferText","blackCard","setBlackCard","czar","setCzar","expiryTimestamp","setExpiryTimestamp","Date","now","pointArray","cardIdsArray","picksInBC","players","refresh","get_games","get","preUrl","then","response","get_player_hirachy","data","games","i","length","id","offerCard","cId","text","push","console","log","picks","putCard","voteCardIds","pullPoints","getBlackCard","getCzar","getWhiteCards","getWaitingPlayers","createPoints","pointArr","pList","map","point","createWhiteCards","cardsArr","boo","cList","eintrag","voteCard","currentBlackCard","pick","putVoteCard","cIdArr","id_string","JSON","stringify","Jstring","msg","parse","put","catch","error","waitForCzarToVote","onExpire","timeout","createZarCards","offers","checkForPlayers","waitingForPlayers","delay","Promise","res","setTimeout","name"],"sources":["D:/Webprog/proj-cah/src/InGame.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Players from './Players';\r\nimport './InGame.css';\r\nimport axios from \"axios\";\r\nimport config from './config.json';\r\nimport Card from \"./Card\";\r\nimport { useTimer } from 'react-timer-hook';\r\nimport Timer from \"./Timer\";\r\nimport { Status } from \"./Status\";\r\nimport { Hilfe } from \"./Hilfe\";\r\n\r\nconst InGame = (props) => {\r\n    let pointId = 0;\r\n    const playerData = props.pData;\r\n    const gameid = props.gId;\r\n    const [points, setPoints] = useState([]);\r\n\r\n    const [cards, setCards] = useState();\r\n    const [cardToOfferID, setCardToOfferID] = useState();\r\n    const [cardToOfferText, setCardToOfferText] = useState();\r\n\r\n    const [blackCard, setBlackCard] = useState();\r\n    const [czar, setCzar] = useState('loading');\r\n\r\n    const [expiryTimestamp, setExpiryTimestamp] = useState(Date.now() + 10000);\r\n\r\n    let pointArray;\r\n    let cardIdsArray = []\r\n    let picksInBC\r\n    let players = []\r\n\r\n    //'main method'\r\n    useEffect(() => {\r\n        refresh();\r\n        get_games();\r\n    }, []);\r\n\r\n    function get_games(){\r\n        axios.get(config.preUrl + 'games/').then(response => {\r\n            get_player_hirachy(response.data.games);\r\n        });\r\n    }\r\n    function get_player_hirachy(games){\r\n        for(let i = 0; i < games.length;i++){\r\n            if(games[i].id === gameid){\r\n                players = games[i].players\r\n            }\r\n        }\r\n    }\r\n\r\n    // load offer preview and put it\r\n    function offerCard(cId, text) {\r\n\r\n        cardIdsArray.push(cId,)\r\n        console.log(cId)\r\n        setCardToOfferID(cId);\r\n        setCardToOfferText(text);\r\n        console.log(picksInBC)\r\n\r\n        let picks = []\r\n        for (let i = 0; i < cardIdsArray.length;i++){\r\n            if (i > cardIdsArray.length-1-picksInBC){\r\n                picks.push(cardIdsArray[i])\r\n            }\r\n        }\r\n        if(picks.length = picksInBC){\r\n            console.log('offeredCard')\r\n            putCard(picks);\r\n        }\r\n    \r\n            \r\n    }\r\n\r\n    // load divs\r\n    function refresh() {\r\n        cardIdsArray= []\r\n        voteCardIds = []\r\n        pullPoints();\r\n        setCards(null);\r\n        setCardToOfferID(null);\r\n        setCardToOfferText(null);\r\n        setBlackCard(null);\r\n        setCzar('loading');\r\n        getBlackCard();\r\n        getCzar();\r\n    }\r\n\r\n    // if czar no white cards\r\n    function getCzar() {\r\n        axios.get(config.preUrl + 'games/' + gameid).then(response => {\r\n            setCzar(response.data.czar);\r\n            if (response.data.czar.id !== playerData.id) {\r\n                getWhiteCards();\r\n            }\r\n            else{\r\n                getWaitingPlayers();\r\n            }\r\n        });\r\n    }\r\n\r\n    // pull player points\r\n    function pullPoints() {\r\n        axios.get(config.preUrl + 'games/' + gameid).then(response => {\r\n            createPoints(response.data.points);\r\n        });\r\n    }\r\n\r\n    // map every Player point as a paragraph\r\n    function createPoints(pointArr) {\r\n        pointArray = pointArr;\r\n        var pList = [];\r\n        pList.push(<p key={\"p1\"}> </p>);\r\n        pList.push(pointArr.map((point) => (<div key={pointId += 1}> : {point} |</div>)));\r\n        setPoints(pList);\r\n    }\r\n\r\n    // renders White Cards of Player\r\n    // btnboo true => use btn rendernn false => vote btn rendern\r\n    function createWhiteCards(cardsArr, boo) {\r\n        let cList = [];\r\n        cList.push(cardsArr.map((eintrag) => (\r\n            <div>\r\n                <p> </p>\r\n                <Card key={eintrag.id} showBtn={true} btnboo={boo} voteCard={voteCard} offerCard={offerCard} pId={playerData.id} gId={gameid} cId={eintrag.id} text={eintrag.text} />\r\n            </div>\r\n        )));\r\n        setCards(cList);\r\n    }\r\n\r\n    // pull white cards of Player to choose\r\n    function getWhiteCards() {\r\n        axios.get(config.preUrl + 'games/' + gameid + '/cards/' + playerData.id).then(response => {\r\n            console.log(response.data.cards)\r\n            createWhiteCards(response.data.cards, true);\r\n        });\r\n    }\r\n\r\n    // pull black card\r\n    function getBlackCard() {\r\n        axios.get(config.preUrl + 'games/' + gameid).then(response => {\r\n            setBlackCard(response.data.currentBlackCard.text);\r\n            picksInBC = response.data.currentBlackCard.pick\r\n        });\r\n    }\r\n\r\n    let voteCardIds=[]\r\n    // callback from Vote button in Cards\r\n    function voteCard(cId) {\r\n        voteCardIds.push(cId)\r\n        let picks = []\r\n        for (let i = 0; i < voteCardIds.length;i++){\r\n            if (i > voteCardIds.length-1-picksInBC){\r\n                picks.push(voteCardIds[i])\r\n                console.log(voteCardIds[i])\r\n            }\r\n        }\r\n        if(picks.length = picksInBC){\r\n            console.log('voted')\r\n            putVoteCard(picks);\r\n        }\r\n        \r\n    \r\n    }\r\n    function putVoteCard(cIdArr){\r\n        console.log('Vote');\r\n        let id_string = JSON.stringify(cIdArr);\r\n        let Jstring = `{\"cards\": ${id_string}}`;\r\n        const msg = JSON.parse(Jstring);\r\n        // Ein axios-Aufruf, um die Abstimmung durchzufÃ¼hren\r\n        axios.put(config.preUrl + 'games/' + gameid + '/offers/' + playerData.id, msg)\r\n          .then(response => {\r\n            refresh();\r\n            console.log(response.data);\r\n          })\r\n          .catch(error => {\r\n            console.error('Fehler beim Abstimmen:', error);\r\n          });\r\n        \r\n    }\r\n\r\n    // if points change refresh page\r\n    function waitForCzarToVote() {\r\n        axios.get(config.preUrl + 'games/' + gameid).then(response => {\r\n            if (JSON.stringify(response.data.points) === JSON.stringify(pointArray)) {\r\n                waitForCzarToVote();\r\n                console.log(response.data.points)\r\n                console.log(pointArray)\r\n                console.log('waiting_for_Czar')\r\n            } else {\r\n                refresh();\r\n                console.log('refreshing')\r\n            }\r\n        });\r\n    }\r\n\r\n    // offer card to czar\r\n    // ----> put wechselt abgegebene Karten\r\n    function putCard(id) {\r\n        console.log(id)\r\n        //console.log('player: ' + playerData.id + ' game: ' + gameid);\r\n        let id_string = JSON.stringify(id);\r\n        let Jstring = `{\"cards\": ${id_string}}`;\r\n        let msg = JSON.parse(Jstring);\r\n        axios.put(config.preUrl + 'games/' + gameid + '/cards/' + playerData.id, msg).then(response => {\r\n            waitForCzarToVote();\r\n        });\r\n    }\r\n\r\n    // Timer timeout callback wenn czar dann get offers\r\n    async function onExpire() {\r\n        await timeout(2000)\r\n        console.log('expire');\r\n        //console.log('player: ' + playerData.id + ' game: ' + gameid);\r\n        if (czar.id === playerData.id) {\r\n            console.log('Player is Czar')\r\n            axios.get(config.preUrl + 'games/' + gameid + '/offers/' + playerData.id).then(response => {\r\n                console.log('creatingCzarCards')\r\n                createZarCards(response.data.offers, false);\r\n                \r\n            });\r\n        }\r\n        else{\r\n            console.log('Player is Not Czar')\r\n        }\r\n    }\r\n    function checkForPlayers(data){\r\n        console.log(data.waitingForPlayers)\r\n        if (data.waitingForPlayers === 0){\r\n            onExpire()\r\n        }\r\n        else{ \r\n            console.log('checking_for_players')\r\n            getWaitingPlayers()\r\n        }\r\n\r\n    }\r\n    //wenn alle player cards abgegeben dann onExpire\r\n    function getWaitingPlayers (){\r\n        axios.get(config.preUrl + 'games/' + gameid).then(response => {\r\n            checkForPlayers(response.data)\r\n        });\r\n    }\r\n\r\n    function timeout(delay) {\r\n        return new Promise( res => setTimeout(res, delay) );\r\n    }\r\n\r\n    function createZarCards(cardsArr,boo){\r\n        let cList = []\r\n        for (let i = 0 ; i <cardsArr.length; i++ ){\r\n            \r\n            cList.push(cardsArr[i].map((eintrag) => (\r\n            <div>\r\n                <p> </p>\r\n                <Card key={eintrag.id} btnboo={boo} showBtn = {true} voteCard={voteCard} offerCard={offerCard} pId={playerData.id} gId={gameid} cId={eintrag.id} text={eintrag.text} />\r\n            </div>\r\n            )))\r\n            \r\n        }\r\n        setCards(cList)  \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p align=\"center\" id=\"title\"> CARDS AGAINST HUMANITY: <Status gId={gameid}/> <Hilfe/> </p>\r\n            <div id='wrapperPlayerPoints'>\r\n                <div id='players'><Players pData={playerData} gId={gameid} /></div>\r\n                <div id='points'>\r\n                    Points:\r\n                    <div>{points}</div>\r\n                </div>\r\n                <div id=\"blackCard\">\r\n                    <div>\r\n                        <p id=\"blText\">{blackCard}</p>\r\n                    </div>\r\n                </div>\r\n                <div id=\"czar\">\r\n                    <label id=\"czarLabel\">Czar: </label>\r\n                    <label id=\"czarNameLabel\"> {czar.name}</label>\r\n                </div>\r\n                <div id=\"answer\">\r\n                    {cardToOfferText}\r\n                </div>\r\n                \r\n            </div>\r\n            <div id=\"cards\">\r\n                {cards}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//<div id=\"timer\"><Timer onExpire={onExpire} expiryTimestamp={expiryTimestamp} /></div>\r\nexport default InGame;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}