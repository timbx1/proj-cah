{"ast":null,"code":"var _jsxFileName = \"D:\\\\Webprog\\\\proj-cah\\\\src\\\\PlayAnimation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './PlayAnimation.css';\nimport axios from 'axios';\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlayAnimation(props) {\n  _s();\n\n  // Deklaration der benötigten Zustände und Variablen\n  const pData = props.playerData; // Spielerdaten\n\n  const gameid = props.gId; // Spiel-ID\n\n  const [text, setText] = useState(''); // Zustand für den anzuzeigenden Text\n  // Effekt-Hook, der beim Komponentenladen aufgerufen wird\n\n  useEffect(() => {\n    get_winner();\n  }, []); // Funktion zum Abrufen des Gewinners vom Server\n\n  function get_winner() {\n    axios.get(config.preUrl + 'games/').then(response => {\n      show_winner(response.data.games);\n    });\n  } // Funktion zur Anzeige des Gewinners oder Verlierers\n\n\n  function show_winner(games) {\n    for (let i = 0; i < games.length; i++) {\n      if (games[i].id == gameid) {\n        if (games[i].winner.id == pData.id) {\n          setText('GEWINNER');\n          back_to_main();\n        } else {\n          setText('VERLIERER');\n          back_to_main();\n        }\n      }\n    } // Funktion zur Verzögerung des Seitenneustarts\n\n\n    function timeout(delay) {\n      return new Promise(res => setTimeout(res, delay));\n    } // Funktion zum Zurückkehren zum Hauptbildschirm nach einer Verzögerung\n\n\n    async function back_to_main() {\n      await timeout(7000); // Warten für 7 Sekunden\n\n      window.location.reload(true); // Seite neu laden\n    }\n  } // Anzeige des Gewinner- oder Verlierertexts in einer HTML-Struktur\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"fancy-label\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayAnimation, \"5yvyGKtTaKaUAQhdurZIg0uLsuM=\");\n\n_c = PlayAnimation;\nexport default PlayAnimation;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayAnimation\");","map":{"version":3,"names":["React","useState","useEffect","axios","config","PlayAnimation","props","pData","playerData","gameid","gId","text","setText","get_winner","get","preUrl","then","response","show_winner","data","games","i","length","id","winner","back_to_main","timeout","delay","Promise","res","setTimeout","window","location","reload"],"sources":["D:/Webprog/proj-cah/src/PlayAnimation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './PlayAnimation.css';\r\nimport axios from 'axios';\r\nimport config from './config.json';\r\n\r\nfunction PlayAnimation(props) {\r\n  // Deklaration der benötigten Zustände und Variablen\r\n  const pData = props.playerData // Spielerdaten\r\n  const gameid = props.gId // Spiel-ID\r\n\r\n  const [text,setText] = useState('') // Zustand für den anzuzeigenden Text\r\n\r\n  // Effekt-Hook, der beim Komponentenladen aufgerufen wird\r\n  useEffect(() => {\r\n    get_winner();\r\n  }, []);\r\n\r\n  // Funktion zum Abrufen des Gewinners vom Server\r\n  function get_winner(){\r\n    axios.get(config.preUrl + 'games/').then(response => {\r\n      show_winner(response.data.games)\r\n  });\r\n  }\r\n\r\n  // Funktion zur Anzeige des Gewinners oder Verlierers\r\n  function show_winner(games){\r\n    for(let i=0;i<games.length;i++){\r\n      if (games[i].id == gameid){\r\n          if(games[i].winner.id == pData.id){\r\n            setText('GEWINNER') \r\n            back_to_main() \r\n          }\r\n          else{\r\n            setText('VERLIERER') \r\n            back_to_main() \r\n          }   \r\n      }\r\n  } \r\n\r\n  // Funktion zur Verzögerung des Seitenneustarts\r\n  function timeout(delay) {\r\n    return new Promise( res => setTimeout(res, delay) );\r\n  }\r\n\r\n  // Funktion zum Zurückkehren zum Hauptbildschirm nach einer Verzögerung\r\n  async function back_to_main(){\r\n    await timeout(7000) // Warten für 7 Sekunden\r\n    window.location.reload(true); // Seite neu laden\r\n  }\r\n  }\r\n\r\n  // Anzeige des Gewinner- oder Verlierertexts in einer HTML-Struktur\r\n  return (\r\n    <div className=\"container\">\r\n      <label className=\"fancy-label\">{text}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayAnimation\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAC5B;EACA,MAAMC,KAAK,GAAGD,KAAK,CAACE,UAApB,CAF4B,CAEG;;EAC/B,MAAMC,MAAM,GAAGH,KAAK,CAACI,GAArB,CAH4B,CAGH;;EAEzB,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBX,QAAQ,CAAC,EAAD,CAA/B,CAL4B,CAKQ;EAEpC;;EACAC,SAAS,CAAC,MAAM;IACdW,UAAU;EACX,CAFQ,EAEN,EAFM,CAAT,CAR4B,CAY5B;;EACA,SAASA,UAAT,GAAqB;IACnBV,KAAK,CAACW,GAAN,CAAUV,MAAM,CAACW,MAAP,GAAgB,QAA1B,EAAoCC,IAApC,CAAyCC,QAAQ,IAAI;MACnDC,WAAW,CAACD,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAX;IACH,CAFC;EAGD,CAjB2B,CAmB5B;;;EACA,SAASF,WAAT,CAAqBE,KAArB,EAA2B;IACzB,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,KAAK,CAACE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;MAC7B,IAAID,KAAK,CAACC,CAAD,CAAL,CAASE,EAAT,IAAed,MAAnB,EAA0B;QACtB,IAAGW,KAAK,CAACC,CAAD,CAAL,CAASG,MAAT,CAAgBD,EAAhB,IAAsBhB,KAAK,CAACgB,EAA/B,EAAkC;UAChCX,OAAO,CAAC,UAAD,CAAP;UACAa,YAAY;QACb,CAHD,MAII;UACFb,OAAO,CAAC,WAAD,CAAP;UACAa,YAAY;QACb;MACJ;IACJ,CAZ0B,CAc3B;;;IACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;MACtB,OAAO,IAAIC,OAAJ,CAAaC,GAAG,IAAIC,UAAU,CAACD,GAAD,EAAMF,KAAN,CAA9B,CAAP;IACD,CAjB0B,CAmB3B;;;IACA,eAAeF,YAAf,GAA6B;MAC3B,MAAMC,OAAO,CAAC,IAAD,CAAb,CAD2B,CACP;;MACpBK,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB,EAF2B,CAEG;IAC/B;EACA,CA5C2B,CA8C5B;;;EACA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,uBACE;MAAO,SAAS,EAAC,aAAjB;MAAA,UAAgCtB;IAAhC;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GApDQN,a;;KAAAA,a;AAsDT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}