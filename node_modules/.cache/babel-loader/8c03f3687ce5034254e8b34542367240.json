{"ast":null,"code":"var _jsxFileName = \"D:\\\\Webprog\\\\proj-cah\\\\src\\\\Recycle_bin.js\";\nimport axios from \"axios\";\nimport config from './config.json';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recycle_bin = () => {\n  // Die clearAPI-Funktion ruft die Funktionen get_players und get_games auf, um Spieler und Spiele aus der API zu löschen.\n  function clearAPI() {\n    get_players();\n    get_games();\n  } // Die get_players-Funktion ruft die Spielerdaten aus der API ab und ruft dann die Funktion clearPlayers auf, um die Spieler zu löschen.\n\n\n  function get_players() {\n    axios.get(config.preUrl + 'players/').then(response => {\n      clearPlayers(response.data.players);\n    });\n  } // Die clearPlayers-Funktion nimmt die Spielerdaten als Parameter und löscht dann nacheinander jeden Spieler aus der API.\n\n\n  function clearPlayers(data) {\n    for (let i = 0; i < data.length; i++) {\n      axios.delete(config.preUrl + 'players/' + data[i].id).then(response => {\n        console.log(response.data);\n      });\n    }\n  } // Die get_games-Funktion ruft Spieldaten aus der API ab und ruft dann die Funktion clearGames auf, um die Spiele zu löschen.\n\n\n  function get_games() {\n    axios.get(config.preUrl + 'games/').then(response => {\n      clearGames(response.data.games);\n    });\n  } // Die clearGames-Funktion nimmt die Spieldaten als Parameter und löscht dann nacheinander jedes Spiel aus der API.\n\n\n  function clearGames(data) {\n    for (let i = 0; i < data.length; i++) {\n      axios.delete(config.preUrl + 'games/' + data[i].id).then(response => {\n        console.log(response.data);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearAPI,\n      children: \"API leeren\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Recycle_bin;\nexport default Recycle_bin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recycle_bin\");","map":{"version":3,"names":["axios","config","React","Recycle_bin","clearAPI","get_players","get_games","get","preUrl","then","response","clearPlayers","data","players","i","length","delete","id","console","log","clearGames","games"],"sources":["D:/Webprog/proj-cah/src/Recycle_bin.js"],"sourcesContent":["import axios from \"axios\";\r\nimport config from './config.json';\r\nimport React from 'react';\r\n\r\nconst Recycle_bin = () => {\r\n    // Die clearAPI-Funktion ruft die Funktionen get_players und get_games auf, um Spieler und Spiele aus der API zu löschen.\r\n    function clearAPI() {\r\n        get_players();\r\n        get_games();\r\n    }\r\n\r\n    // Die get_players-Funktion ruft die Spielerdaten aus der API ab und ruft dann die Funktion clearPlayers auf, um die Spieler zu löschen.\r\n    function get_players() {\r\n        axios.get(config.preUrl + 'players/').then(response => {\r\n            clearPlayers(response.data.players);\r\n        });\r\n    }\r\n\r\n    // Die clearPlayers-Funktion nimmt die Spielerdaten als Parameter und löscht dann nacheinander jeden Spieler aus der API.\r\n    function clearPlayers(data) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            axios.delete(config.preUrl + 'players/' + data[i].id).then(response => {\r\n                console.log(response.data);\r\n            });\r\n        }\r\n    }\r\n\r\n    // Die get_games-Funktion ruft Spieldaten aus der API ab und ruft dann die Funktion clearGames auf, um die Spiele zu löschen.\r\n    function get_games() {\r\n        axios.get(config.preUrl + 'games/').then(response => {\r\n            clearGames(response.data.games);\r\n        });\r\n    }\r\n\r\n    // Die clearGames-Funktion nimmt die Spieldaten als Parameter und löscht dann nacheinander jedes Spiel aus der API.\r\n    function clearGames(data) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            axios.delete(config.preUrl + 'games/' + data[i].id).then(response => {\r\n                console.log(response.data);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={clearAPI}>API leeren</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recycle_bin;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EACtB;EACA,SAASC,QAAT,GAAoB;IAChBC,WAAW;IACXC,SAAS;EACZ,CALqB,CAOtB;;;EACA,SAASD,WAAT,GAAuB;IACnBL,KAAK,CAACO,GAAN,CAAUN,MAAM,CAACO,MAAP,GAAgB,UAA1B,EAAsCC,IAAtC,CAA2CC,QAAQ,IAAI;MACnDC,YAAY,CAACD,QAAQ,CAACE,IAAT,CAAcC,OAAf,CAAZ;IACH,CAFD;EAGH,CAZqB,CActB;;;EACA,SAASF,YAAT,CAAsBC,IAAtB,EAA4B;IACxB,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;MAClCd,KAAK,CAACgB,MAAN,CAAaf,MAAM,CAACO,MAAP,GAAgB,UAAhB,GAA6BI,IAAI,CAACE,CAAD,CAAJ,CAAQG,EAAlD,EAAsDR,IAAtD,CAA2DC,QAAQ,IAAI;QACnEQ,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACE,IAArB;MACH,CAFD;IAGH;EACJ,CArBqB,CAuBtB;;;EACA,SAASN,SAAT,GAAqB;IACjBN,KAAK,CAACO,GAAN,CAAUN,MAAM,CAACO,MAAP,GAAgB,QAA1B,EAAoCC,IAApC,CAAyCC,QAAQ,IAAI;MACjDU,UAAU,CAACV,QAAQ,CAACE,IAAT,CAAcS,KAAf,CAAV;IACH,CAFD;EAGH,CA5BqB,CA8BtB;;;EACA,SAASD,UAAT,CAAoBR,IAApB,EAA0B;IACtB,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;MAClCd,KAAK,CAACgB,MAAN,CAAaf,MAAM,CAACO,MAAP,GAAgB,QAAhB,GAA2BI,IAAI,CAACE,CAAD,CAAJ,CAAQG,EAAhD,EAAoDR,IAApD,CAAyDC,QAAQ,IAAI;QACjEQ,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACE,IAArB;MACH,CAFD;IAGH;EACJ;;EAED,oBACI;IAAA,uBACI;MAAQ,OAAO,EAAER,QAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CA5CD;;KAAMD,W;AA8CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}