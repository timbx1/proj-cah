{"ast":null,"code":"var _jsxFileName = \"D:\\\\Webprog\\\\proj-cah\\\\src\\\\InGame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Players from './Players';\nimport './InGame.css';\nimport axios from \"axios\";\nimport config from './config.json';\nimport Card from \"./Card\";\nimport { useTimer } from 'react-timer-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InGame = props => {\n  _s();\n\n  let pointId = 0;\n  const playerData = props.pData;\n  const gameid = props.gId;\n  const [points, setPoints] = useState([]);\n  const [cards, setCards] = useState();\n  const [cardToOfferID, setCardToOfferID] = useState();\n  const [cardToOfferText, setCardToOfferText] = useState();\n  const [blackCard, setBlackCard] = useState();\n  const [czar, setCzar] = useState('loading');\n  const {\n    time,\n    start,\n    pause,\n    reset,\n    status\n  } = useTimer({\n    endTime,\n    onTimeOver: () => {\n      console.log('Time is over');\n    }\n  });\n  useEffect(() => {\n    pullPoints();\n    getBlackCard();\n    getCzar();\n    start(30);\n  }, []);\n\n  function offerCard(cId, text) {\n    console.log(\"text\");\n    setCardToOfferID(cId);\n    setCardToOfferText(text);\n    console.log(text);\n  }\n\n  function getCzar() {\n    axios.get(config.preUrl + '/games/' + gameid).then(response => {\n      setCzar(response.data.czar);\n\n      if (response.data.czar.id != playerData.id) {\n        getWhiteCards();\n      }\n    });\n  } //make div for each points of player\n\n\n  function pullPoints() {\n    axios.get(config.preUrl + '/games/' + gameid).then(response => {\n      console.log(\"points pulled\");\n      createPoints(response.data.points);\n    });\n  } //map every point as paragraph\n\n\n  function createPoints(pointArr) {\n    var pList = [];\n    pList.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" \"\n    }, \"p1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }, this));\n    pList.push(pointArr.map(point => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" : \", point, \" |\"]\n    }, pointId += 1, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 45\n    }, this)));\n    setPoints(pList);\n  } //renders Cards of Player\n\n\n  function createWhiteCards(cardsArr) {\n    console.log(\"cards created\");\n    let cList = [];\n    cList.push(cardsArr.map(eintrag => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        btnboo: true,\n        offerCard: offerCard,\n        pId: playerData.id,\n        gId: gameid,\n        cId: eintrag.id,\n        text: eintrag.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)));\n    setCards(cList);\n  }\n\n  function getWhiteCards() {\n    axios.get(config.preUrl + '/games/' + gameid + '/cards/' + playerData.id).then(response => {\n      console.log(\"Cards Added\");\n      createWhiteCards(response.data.cards);\n    });\n  }\n\n  function getBlackCard() {\n    axios.get(config.preUrl + '/games/' + gameid).then(response => {\n      setBlackCard(response.data.currentBlackCard.text);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      align: \"center\",\n      id: \"title\",\n      children: \" CARDS AGAINST HUMANITY:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapperPlayerPoints\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"players\",\n        children: /*#__PURE__*/_jsxDEV(Players, {\n          pData: playerData,\n          gId: gameid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"points\",\n        children: [\"Points:\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: points\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"blackCard\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"blText\",\n            children: blackCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"czar\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"czarLabel\",\n          children: \"Czar: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"czarNameLabel\",\n          children: [\" \", czar.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"answer\",\n        children: cardToOfferText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cards\",\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InGame, \"ChCSXPH4lBhfDrW8QH7sJIOuAWg=\", false, function () {\n  return [useTimer];\n});\n\n_c = InGame;\nexport default InGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"InGame\");","map":{"version":3,"names":["React","useState","useEffect","Players","axios","config","Card","useTimer","InGame","props","pointId","playerData","pData","gameid","gId","points","setPoints","cards","setCards","cardToOfferID","setCardToOfferID","cardToOfferText","setCardToOfferText","blackCard","setBlackCard","czar","setCzar","time","start","pause","reset","status","endTime","onTimeOver","console","log","pullPoints","getBlackCard","getCzar","offerCard","cId","text","get","preUrl","then","response","data","id","getWhiteCards","createPoints","pointArr","pList","push","map","point","createWhiteCards","cardsArr","cList","eintrag","currentBlackCard","name"],"sources":["D:/Webprog/proj-cah/src/InGame.js"],"sourcesContent":["import React, { useState , useEffect} from \"react\";\r\nimport Players from './Players'\r\nimport './InGame.css'\r\nimport axios from \"axios\";\r\nimport config from './config.json'\r\nimport Card from \"./Card\";\r\nimport { useTimer } from 'react-timer-hook';\r\n\r\nconst InGame = (props) => {\r\n    let pointId = 0\r\n    const playerData = props.pData\r\n    const gameid = props.gId\r\n    const [points, setPoints] = useState([])\r\n\r\n    const [cards, setCards] = useState()\r\n    const [cardToOfferID, setCardToOfferID] = useState()\r\n    const [cardToOfferText, setCardToOfferText] = useState()\r\n\r\n    const [blackCard, setBlackCard] = useState()\r\n    const [czar, setCzar] = useState('loading')\r\n    const { time, start, pause, reset, status } = useTimer({\r\n        endTime,\r\n        onTimeOver: () => {\r\n          console.log('Time is over');\r\n        },\r\n      });\r\n\r\n    useEffect(()=>{\r\n        pullPoints()\r\n        getBlackCard()\r\n        getCzar()\r\n        start(30)\r\n\r\n      },[])\r\n    function offerCard(cId,text){\r\n        console.log(\"text\")\r\n        setCardToOfferID(cId)\r\n        setCardToOfferText(text)\r\n        console.log(text)\r\n    }\r\n    \r\n    function getCzar(){\r\n        axios.get(config.preUrl+'/games/'+gameid).then(response => {\r\n            setCzar(response.data.czar)\r\n            if(response.data.czar.id != playerData.id){\r\n                getWhiteCards()\r\n            }\r\n        })\r\n    }\r\n\r\n    //make div for each points of player\r\n    function pullPoints (){\r\n        axios.get(config.preUrl+'/games/'+gameid).then(response => {\r\n            console.log(\"points pulled\")\r\n            createPoints(response.data.points)\r\n        })\r\n    }\r\n    //map every point as paragraph\r\n    function createPoints(pointArr){\r\n        var pList = []\r\n        pList.push(<p key={\"p1\"}> </p>)\r\n        pList.push(pointArr.map((point) => (<div key={pointId+=1}> : {point} |</div>)))\r\n        setPoints(pList)\r\n    }\r\n    //renders Cards of Player\r\n    function createWhiteCards(cardsArr){\r\n        console.log(\"cards created\")\r\n        let cList = []\r\n        cList.push(cardsArr.map((eintrag) => (\r\n        <div>\r\n            <p> </p>\r\n            <Card btnboo={true} offerCard={offerCard} pId={playerData.id} gId={gameid} cId={eintrag.id} text={eintrag.text} />\r\n        </div>\r\n        )))\r\n        setCards(cList)\r\n    }\r\n    function getWhiteCards(){\r\n        axios.get(config.preUrl+'/games/'+gameid+'/cards/'+playerData.id).then(response => {\r\n            console.log(\"Cards Added\")\r\n            createWhiteCards(response.data.cards)\r\n        })\r\n    }\r\n    function getBlackCard (){\r\n        axios.get(config.preUrl+'/games/'+gameid).then(response => {\r\n            setBlackCard(response.data.currentBlackCard.text)\r\n        })\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <p align=\"center\" id=\"title\"> CARDS AGAINST HUMANITY:</p>\r\n        <div id='wrapperPlayerPoints'>\r\n            <div id='players'><Players pData={playerData} gId={gameid} /></div>\r\n            <div id='points'>\r\n                Points: \r\n                <div>{points}</div>\r\n                \r\n            </div>\r\n            \r\n            <div id=\"blackCard\">\r\n                <div>\r\n                    <p id=\"blText\">{blackCard}</p>\r\n                </div>\r\n            </div>\r\n            <div id=\"czar\">\r\n                <label id=\"czarLabel\">Czar: </label>\r\n                <label id=\"czarNameLabel\"> {czar.name}</label>\r\n            </div>\r\n            <div id=\"answer\">\r\n                    {cardToOfferText}\r\n            </div>\r\n        </div>\r\n        <div id=\"cards\">\r\n\r\n                {cards}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InGame"],"mappings":"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"},"metadata":{},"sourceType":"module"}