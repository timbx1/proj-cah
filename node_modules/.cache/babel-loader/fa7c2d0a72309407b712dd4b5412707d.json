{"ast":null,"code":"import _regeneratorRuntime from\"D:/Webprog/proj-cah/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/Webprog/proj-cah/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/Webprog/proj-cah/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import Players from'./Players';import'./InGame.css';import axios from\"axios\";import config from'./config.json';import Card from\"./Card\";import{useTimer}from'react-timer-hook';import Timer from\"./Timer\";import{Status}from\"./Status\";import{Hilfe}from\"./Hilfe\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InGame=function InGame(props){// Initialisierung von Variablen und Zuständen\nvar pointId=0;var playerData=props.pData;var gameid=props.gId;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),points=_useState2[0],setPoints=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),cards=_useState4[0],setCards=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),cardToOfferID=_useState6[0],setCardToOfferID=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),cardToOfferText=_useState8[0],setCardToOfferText=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),blackCard=_useState10[0],setBlackCard=_useState10[1];var _useState11=useState('loading'),_useState12=_slicedToArray(_useState11,2),czar=_useState12[0],setCzar=_useState12[1];var pointArray=[];var cardIdsArray=[];var picksInBC;var running=true;var czarId;//'main method'\nuseEffect(function(){refresh();},[]);// Funktion zum Aktualisieren der Spieloberfläche\nfunction refresh(){is_game_running();if(running){pullPoints();cardIdsArray=[];voteCardIds=[];setCards(null);setCardToOfferID(null);setCardToOfferText(null);setBlackCard(null);getBlackCard();getCzar();}}// Überprüfung, ob das Spiel läuft oder beendet ist\nfunction is_game_running(){axios.get(config.preUrl+'games/').then(function(response){check_game_end(response.data.games);});}function check_game_end(games){for(var i=0;i<games.length;i++){if(games[i].id==gameid){running=games[i].running;if(running){return;}else{console.log('animation');play_animation();}}}}// Funktion zur Ausführung einer Animation, wenn das Spiel beendet ist\nfunction play_animation(){props.changeUi(5,playerData,gameid);}// Laden und Anzeigen der Kartenangebote\nfunction offerCard(cId,text){cardIdsArray.push(cId);console.log(cId);setCardToOfferID(cId);setCardToOfferText(text);console.log(picksInBC);var picks=[];for(var i=0;i<cardIdsArray.length;i++){if(i>cardIdsArray.length-1-picksInBC){picks.push(cardIdsArray[i]);}}if(picks.length=picksInBC){console.log('offeredCard');putCard(picks);}}// Wenn der Czar ist, werden keine weißen Karten angezeigt\nfunction getCzar(){axios.get(config.preUrl+'games/'+gameid).then(function(response){setCzar(response.data.czar);czarId=response.data.czar.id;if(response.data.czar.id!==playerData.id){getWhiteCards();}else{getWaitingPlayers();}});}// Abrufen der Spielerpunkte\nfunction pullPoints(){axios.get(config.preUrl+'games/'+gameid).then(function(response){createPoints(response.data.points);});}// Darstellung der Spielerpunkte\nfunction createPoints(pointArr){pointArray=pointArr;var pList=[];pList.push(/*#__PURE__*/_jsx(\"p\",{children:\" \"},\"p1\"));pList.push(pointArr.map(function(point){return/*#__PURE__*/_jsxs(\"div\",{children:[\" : \",point,\" |\"]},pointId+=1);}));setPoints(pList);}// Rendern der weißen Karten des Spielers\n// boo=true => Verwendung von btn rendernn false => vote btn rendern\nfunction createWhiteCards(cardsArr,boo){var cList=[];cList.push(cardsArr.map(function(eintrag){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\" \"}),/*#__PURE__*/_jsx(Card,{showBtn:true,btnboo:boo,voteCard:voteCard,offerCard:offerCard,pId:playerData.id,gId:gameid,cId:eintrag.id,text:eintrag.text},eintrag.id)]});}));setCards(cList);}// Abrufen der weißen Karten des Spielers zur Auswahl\nfunction getWhiteCards(){axios.get(config.preUrl+'games/'+gameid+'/cards/'+playerData.id).then(function(response){console.log(response.data.cards);createWhiteCards(response.data.cards,true);});}// Abrufen der schwarzen Karte\nfunction getBlackCard(){axios.get(config.preUrl+'games/'+gameid).then(function(response){setBlackCard(response.data.currentBlackCard.text);picksInBC=response.data.currentBlackCard.pick;});}var voteCardIds=[];// Callback von der Vote-Schaltfläche in Karten\nfunction voteCard(cId){voteCardIds.push(cId);var picks=[];for(var i=0;i<voteCardIds.length;i++){if(i>voteCardIds.length-1-picksInBC){picks.push(voteCardIds[i]);console.log(voteCardIds[i]);}}if(picks.length=picksInBC){console.log('voted');putVoteCard(picks);}}// Hochladen der Abstimmungskarte\nfunction putVoteCard(cIdArr){console.log('Vote');var id_string=JSON.stringify(cIdArr);var Jstring=\"{\\\"cards\\\": \".concat(id_string,\"}\");var msg=JSON.parse(Jstring);// Ein axios-Aufruf, um die Abstimmung durchzuführen\naxios.put(config.preUrl+'games/'+gameid+'/offers/'+playerData.id,msg).then(function(response){refresh();console.log(response.data);}).catch(function(error){console.error('Fehler beim Abstimmen:',error);});}// Warten auf die Abstimmung des Czars\nfunction waitForCzarToVote(){is_game_running();if(running){axios.get(config.preUrl+'games/'+gameid).then(function(response){if(JSON.stringify(response.data.points)===JSON.stringify(pointArray)){waitForCzarToVote();console.log(response.data.points);console.log(pointArray);console.log('waiting_for_Czar');}else{refresh();console.log('refreshing');}});}}// Angebot einer Karte an den Czar\n// ----> put wechselt abgegebene Karten\nfunction putCard(id){console.log(id);//console.log('player: ' + playerData.id + ' game: ' + gameid);\nvar id_string=JSON.stringify(id);var Jstring=\"{\\\"cards\\\": \".concat(id_string,\"}\");var msg=JSON.parse(Jstring);axios.put(config.preUrl+'games/'+gameid+'/cards/'+playerData.id,msg).then(function(response){waitForCzarToVote();});}// Timer timeout callback, wenn der Czar ist, dann get offers\nfunction onExpire(){return _onExpire.apply(this,arguments);}// Überprüfen, ob Spieler warten\nfunction _onExpire(){_onExpire=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return timeout(2000);case 2:console.log('expire');//console.log('player: ' + playerData.id + ' game: ' + gameid);\nif(czarId==playerData.id){console.log('Player ist der Czar');axios.get(config.preUrl+'games/'+gameid+'/offers/'+playerData.id).then(function(response){console.log('Erstellen von Czar-Karten');createZarCards(response.data.offers,false);});}else{console.log('Spieler ist nicht der Czar');}case 4:case\"end\":return _context.stop();}}},_callee);}));return _onExpire.apply(this,arguments);}function checkForPlayers(data){console.log(data.waitingForPlayers);if(data.waitingForPlayers===0){onExpire();}else{console.log('Überprüfung auf Spieler');getWaitingPlayers();}}// Wenn alle Spieler Karten abgegeben haben, dann onExpire\nfunction getWaitingPlayers(){axios.get(config.preUrl+'games/'+gameid).then(function(response){checkForPlayers(response.data);});}// Funktion zum Timeout\nfunction timeout(delay){return new Promise(function(res){return setTimeout(res,delay);});}// Erstellen von Karten für den Czar\nfunction createZarCards(cardsArr,boo){var cList=[];for(var i=0;i<cardsArr.length;i++){cList.push(cardsArr[i].map(function(eintrag){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\" \"}),/*#__PURE__*/_jsx(Card,{btnboo:boo,showBtn:true,voteCard:voteCard,offerCard:offerCard,pId:playerData.id,gId:gameid,cId:eintrag.id,text:eintrag.text},eintrag.id)]});}));}setCards(cList);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{align:\"center\",id:\"title\",children:[\" \",/*#__PURE__*/_jsx(\"p\",{children:\"CARDS AGAINST HUMANITY: \"}),/*#__PURE__*/_jsx(Status,{gId:gameid}),\" \",/*#__PURE__*/_jsx(Hilfe,{}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{id:\"wrapperPlayerPoints\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"players\",children:/*#__PURE__*/_jsx(Players,{pData:playerData,gId:gameid})}),/*#__PURE__*/_jsxs(\"div\",{id:\"points\",children:[\"Points:\",/*#__PURE__*/_jsx(\"div\",{children:points})]}),/*#__PURE__*/_jsx(\"div\",{id:\"blackCard\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{id:\"blText\",children:blackCard})})}),/*#__PURE__*/_jsxs(\"div\",{id:\"czar\",children:[/*#__PURE__*/_jsx(\"label\",{id:\"czarLabel\",children:\"Czar: \"}),/*#__PURE__*/_jsxs(\"label\",{id:\"czarNameLabel\",children:[\" \",czar.name]})]}),/*#__PURE__*/_jsx(\"div\",{id:\"answer\",children:cardToOfferText})]}),/*#__PURE__*/_jsx(\"div\",{id:\"cards\",children:cards})]});};export default InGame;","map":{"version":3,"names":["React","useState","useEffect","Players","axios","config","Card","useTimer","Timer","Status","Hilfe","InGame","props","pointId","playerData","pData","gameid","gId","points","setPoints","cards","setCards","cardToOfferID","setCardToOfferID","cardToOfferText","setCardToOfferText","blackCard","setBlackCard","czar","setCzar","pointArray","cardIdsArray","picksInBC","running","czarId","refresh","is_game_running","pullPoints","voteCardIds","getBlackCard","getCzar","get","preUrl","then","response","check_game_end","data","games","i","length","id","console","log","play_animation","changeUi","offerCard","cId","text","push","picks","putCard","getWhiteCards","getWaitingPlayers","createPoints","pointArr","pList","map","point","createWhiteCards","cardsArr","boo","cList","eintrag","voteCard","currentBlackCard","pick","putVoteCard","cIdArr","id_string","JSON","stringify","Jstring","msg","parse","put","catch","error","waitForCzarToVote","onExpire","timeout","createZarCards","offers","checkForPlayers","waitingForPlayers","delay","Promise","res","setTimeout","name"],"sources":["D:/Webprog/proj-cah/src/InGame.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Players from './Players';\r\nimport './InGame.css';\r\nimport axios from \"axios\";\r\nimport config from './config.json';\r\nimport Card from \"./Card\";\r\nimport { useTimer } from 'react-timer-hook';\r\nimport Timer from \"./Timer\";\r\nimport { Status } from \"./Status\";\r\nimport { Hilfe } from \"./Hilfe\";\r\n\r\nconst InGame = (props) => {\r\n    // Initialisierung von Variablen und Zuständen\r\n    let pointId = 0;\r\n    const playerData = props.pData;\r\n    const gameid = props.gId;\r\n    const [points, setPoints] = useState([]);\r\n    const [cards, setCards] = useState();\r\n    const [cardToOfferID, setCardToOfferID] = useState();\r\n    const [cardToOfferText, setCardToOfferText] = useState();\r\n    const [blackCard, setBlackCard] = useState();\r\n    const [czar, setCzar] = useState('loading');\r\n    let pointArray = [];\r\n    let cardIdsArray = []\r\n    let picksInBC\r\n    let running = true\r\n    let czarId;\r\n\r\n    //'main method'\r\n    useEffect(() => {\r\n        refresh();\r\n    }, []);\r\n\r\n    // Funktion zum Aktualisieren der Spieloberfläche\r\n    function refresh() {\r\n        is_game_running()\r\n        if(running){\r\n            pullPoints()\r\n            cardIdsArray= []\r\n            voteCardIds = []\r\n            setCards(null);\r\n            setCardToOfferID(null);\r\n            setCardToOfferText(null);\r\n            setBlackCard(null);\r\n            getBlackCard();\r\n            getCzar();\r\n        }\r\n    }\r\n\r\n    // Überprüfung, ob das Spiel läuft oder beendet ist\r\n    function is_game_running(){\r\n        axios.get(config.preUrl + 'games/').then(response => {\r\n            check_game_end(response.data.games)\r\n        });\r\n    }\r\n    function check_game_end(games){\r\n        for(let i=0;i<games.length;i++){\r\n            if (games[i].id == gameid){\r\n                running = games[i].running\r\n                if(running){\r\n                    return\r\n                }\r\n                else{\r\n                    console.log('animation')\r\n                    play_animation()\r\n                }   \r\n            }\r\n        }\r\n    }\r\n\r\n    // Funktion zur Ausführung einer Animation, wenn das Spiel beendet ist\r\n    function play_animation(){\r\n        props.changeUi(5, playerData, gameid)\r\n    }\r\n\r\n    // Laden und Anzeigen der Kartenangebote\r\n    function offerCard(cId, text) {\r\n\r\n        cardIdsArray.push(cId,)\r\n        console.log(cId)\r\n        setCardToOfferID(cId);\r\n        setCardToOfferText(text);\r\n        console.log(picksInBC)\r\n\r\n        let picks = []\r\n        for (let i = 0; i < cardIdsArray.length;i++){\r\n            if (i > cardIdsArray.length-1-picksInBC){\r\n                picks.push(cardIdsArray[i])\r\n            }\r\n        }\r\n        if(picks.length = picksInBC){\r\n            console.log('offeredCard')\r\n            putCard(picks);\r\n        }\r\n    }\r\n\r\n    // Wenn der Czar ist, werden keine weißen Karten angezeigt\r\n    function getCzar() {\r\n        axios.get(config.preUrl + 'games/' + gameid).then(response => {\r\n            setCzar(response.data.czar);\r\n            czarId=response.data.czar.id\r\n            if (response.data.czar.id !== playerData.id) {\r\n                getWhiteCards();\r\n            }\r\n            else{\r\n                getWaitingPlayers();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Abrufen der Spielerpunkte\r\n    function pullPoints() {\r\n        axios.get(config.preUrl + 'games/' + gameid).then(response => {\r\n            createPoints(response.data.points);\r\n        });\r\n    }\r\n\r\n    // Darstellung der Spielerpunkte\r\n    function createPoints(pointArr) {\r\n        pointArray = pointArr;\r\n        var pList = [];\r\n        pList.push(<p key={\"p1\"}> </p>);\r\n        pList.push(pointArr.map((point) => (<div key={pointId += 1}> : {point} |</div>)));\r\n        setPoints(pList);\r\n    }\r\n\r\n    // Rendern der weißen Karten des Spielers\r\n    // boo=true => Verwendung von btn rendernn false => vote btn rendern\r\n    function createWhiteCards(cardsArr, boo) {\r\n        let cList = [];\r\n        cList.push(cardsArr.map((eintrag) => (\r\n            <div>\r\n                <p> </p>\r\n                <Card key={eintrag.id} showBtn={true} btnboo={boo} voteCard={voteCard} offerCard={offerCard} pId={playerData.id} gId={gameid} cId={eintrag.id} text={eintrag.text} />\r\n            </div>\r\n        )));\r\n        setCards(cList);\r\n    }\r\n\r\n    // Abrufen der weißen Karten des Spielers zur Auswahl\r\n    function getWhiteCards() {\r\n        axios.get(config.preUrl + 'games/' + gameid + '/cards/' + playerData.id).then(response => {\r\n            console.log(response.data.cards)\r\n            createWhiteCards(response.data.cards, true);\r\n        });\r\n    }\r\n\r\n    // Abrufen der schwarzen Karte\r\n    function getBlackCard() {\r\n        axios.get(config.preUrl + 'games/' + gameid).then(response => {\r\n            setBlackCard(response.data.currentBlackCard.text);\r\n            picksInBC = response.data.currentBlackCard.pick\r\n        });\r\n    }\r\n\r\n    let voteCardIds=[]\r\n    // Callback von der Vote-Schaltfläche in Karten\r\n    function voteCard(cId) {\r\n        voteCardIds.push(cId)\r\n        let picks = []\r\n        for (let i = 0; i < voteCardIds.length;i++){\r\n            if (i > voteCardIds.length-1-picksInBC){\r\n                picks.push(voteCardIds[i])\r\n                console.log(voteCardIds[i])\r\n            }\r\n        }\r\n        if(picks.length = picksInBC){\r\n            console.log('voted')\r\n            putVoteCard(picks);\r\n        }\r\n    }\r\n\r\n    // Hochladen der Abstimmungskarte\r\n    function putVoteCard(cIdArr){\r\n        console.log('Vote');\r\n        let id_string = JSON.stringify(cIdArr);\r\n        let Jstring = `{\"cards\": ${id_string}}`;\r\n        const msg = JSON.parse(Jstring);\r\n        // Ein axios-Aufruf, um die Abstimmung durchzuführen\r\n        axios.put(config.preUrl + 'games/' + gameid + '/offers/' + playerData.id, msg)\r\n          .then(response => {\r\n            refresh();\r\n            console.log(response.data);\r\n          })\r\n          .catch(error => {\r\n            console.error('Fehler beim Abstimmen:', error);\r\n          });\r\n    }\r\n\r\n    // Warten auf die Abstimmung des Czars\r\n    function waitForCzarToVote() {\r\n        is_game_running()\r\n        if(running){\r\n            axios.get(config.preUrl + 'games/' + gameid).then(response => {\r\n                if (JSON.stringify(response.data.points) === JSON.stringify(pointArray)) {\r\n                    waitForCzarToVote();\r\n                    console.log(response.data.points)\r\n                    console.log(pointArray)\r\n                    console.log('waiting_for_Czar')\r\n                } else {\r\n                    refresh();\r\n                    console.log('refreshing')\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Angebot einer Karte an den Czar\r\n    // ----> put wechselt abgegebene Karten\r\n    function putCard(id) {\r\n        console.log(id)\r\n        //console.log('player: ' + playerData.id + ' game: ' + gameid);\r\n        let id_string = JSON.stringify(id);\r\n        let Jstring = `{\"cards\": ${id_string}}`;\r\n        let msg = JSON.parse(Jstring);\r\n        axios.put(config.preUrl + 'games/' + gameid + '/cards/' + playerData.id, msg).then(response => {\r\n            waitForCzarToVote();\r\n        });\r\n    }\r\n\r\n    // Timer timeout callback, wenn der Czar ist, dann get offers\r\n    async function onExpire() {\r\n        await timeout(2000)\r\n        console.log('expire');\r\n        //console.log('player: ' + playerData.id + ' game: ' + gameid);\r\n        if (czarId == playerData.id) {\r\n            console.log('Player ist der Czar')\r\n            axios.get(config.preUrl + 'games/' + gameid + '/offers/' + playerData.id).then(response => {\r\n                console.log('Erstellen von Czar-Karten')\r\n                createZarCards(response.data.offers, false);\r\n                \r\n            });\r\n        }\r\n        else{\r\n            console.log('Spieler ist nicht der Czar')\r\n        }\r\n    }\r\n\r\n    // Überprüfen, ob Spieler warten\r\n    function checkForPlayers(data){\r\n        console.log(data.waitingForPlayers)\r\n        if (data.waitingForPlayers === 0){\r\n            onExpire()\r\n        }\r\n        else{ \r\n            console.log('Überprüfung auf Spieler')\r\n            getWaitingPlayers()\r\n        }\r\n\r\n    }\r\n\r\n    // Wenn alle Spieler Karten abgegeben haben, dann onExpire\r\n    function getWaitingPlayers (){\r\n        axios.get(config.preUrl + 'games/' + gameid).then(response => {\r\n            checkForPlayers(response.data)\r\n        });\r\n    }\r\n\r\n    // Funktion zum Timeout\r\n    function timeout(delay) {\r\n        return new Promise( res => setTimeout(res, delay) );\r\n    }\r\n\r\n    // Erstellen von Karten für den Czar\r\n    function createZarCards(cardsArr,boo){\r\n        let cList = []\r\n        for (let i = 0 ; i <cardsArr.length; i++ ){\r\n            \r\n            cList.push(cardsArr[i].map((eintrag) => (\r\n            <div>\r\n                <p> </p>\r\n                <Card key={eintrag.id} btnboo={boo} showBtn = {true} voteCard={voteCard} offerCard={offerCard} pId={playerData.id} gId={gameid} cId={eintrag.id} text={eintrag.text} />\r\n            </div>\r\n            )))\r\n            \r\n        }\r\n        setCards(cList)  \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div align=\"center\" id=\"title\"> <p>CARDS AGAINST HUMANITY: </p><Status gId={gameid}/> <Hilfe/> </div>\r\n            <div id='wrapperPlayerPoints'>\r\n                <div id='players'><Players pData={playerData} gId={gameid} /></div>\r\n                <div id='points'>\r\n                    Points:\r\n                    <div>{points}</div>\r\n                </div>\r\n                <div id=\"blackCard\">\r\n                    <div>\r\n                        <p id=\"blText\">{blackCard}</p>\r\n                    </div>\r\n                </div>\r\n                <div id=\"czar\">\r\n                    <label id=\"czarLabel\">Czar: </label>\r\n                    <label id=\"czarNameLabel\"> {czar.name}</label>\r\n                </div>\r\n                <div id=\"answer\">\r\n                    {cardToOfferText}\r\n                </div>\r\n                \r\n            </div>\r\n            <div id=\"cards\">\r\n                {cards}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InGame;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}