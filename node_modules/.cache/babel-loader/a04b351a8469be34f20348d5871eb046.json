{"ast":null,"code":"var _jsxFileName = \"D:\\\\Webprog\\\\proj-cah\\\\src\\\\Players.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Players = props => {\n  _s();\n\n  // Deklaration der benötigten Zustände und Variablen\n  const playerData = props.pData; // Spielerdaten\n\n  const gameid = props.gId; // Spiel-ID\n\n  const [players, setPlayers] = useState(); // Zustand zur Speicherung der Spielerliste\n  // Effekt-Hook, der beim Komponentenladen aufgerufen wird\n\n  useEffect(() => {\n    getGameData(); // Funktion zum Abrufen der Spieldaten aufrufen\n  }, []); // Funktion zum Anzeigen der Spielerliste\n\n  function showPlayers(gameData) {\n    var index = 0;\n\n    for (let i = 0; i < gameData.length; i++) {\n      if (gameData[i].id == gameid) {\n        index = i;\n      }\n    }\n\n    var players = gameData[index].players;\n    var pList = [];\n    pList.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" \"\n    }, \"p1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }, this));\n    pList.push(players.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"|  \", user.name, \" \"]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 43\n    }, this)));\n    setPlayers(pList);\n  } // Funktion zum Abrufen der Spieldaten von der API\n\n\n  function getGameData() {\n    axios.get(config.preUrl + 'games/').then(response => {\n      console.log(response.data.games);\n      showPlayers(response.data.games);\n    });\n  } // Anzeige der Spielerliste in einer HTML-Struktur\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Spieler:\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: players\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Players, \"L36R+Sjk2WyXifBQHqGTYWsO3+g=\");\n\n_c = Players;\nexport default Players;\n\nvar _c;\n\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["React","useState","useEffect","axios","config","Players","props","playerData","pData","gameid","gId","players","setPlayers","getGameData","showPlayers","gameData","index","i","length","id","pList","push","map","user","name","get","preUrl","then","response","console","log","data","games"],"sources":["D:/Webprog/proj-cah/src/Players.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from './config.json'\r\n\r\nconst Players = (props) => {\r\n    // Deklaration der benötigten Zustände und Variablen\r\n    const playerData = props.pData // Spielerdaten\r\n    const gameid = props.gId // Spiel-ID\r\n    const [players , setPlayers] = useState() // Zustand zur Speicherung der Spielerliste\r\n\r\n    // Effekt-Hook, der beim Komponentenladen aufgerufen wird\r\n    useEffect(() => {\r\n        getGameData() // Funktion zum Abrufen der Spieldaten aufrufen\r\n    }, [])\r\n\r\n    // Funktion zum Anzeigen der Spielerliste\r\n    function showPlayers(gameData){\r\n        var index = 0;\r\n        for(let i = 0; i < gameData.length; i++){\r\n            if (gameData[i].id == gameid){\r\n                index = i\r\n            }\r\n        }\r\n        var players = gameData[index].players\r\n        var pList = []\r\n        pList.push(<p key={\"p1\"}> </p>)\r\n        pList.push(players.map((user) => (<div key={user.id}>|  {user.name} </div>)))\r\n        setPlayers(pList)\r\n    }\r\n\r\n    // Funktion zum Abrufen der Spieldaten von der API\r\n    function getGameData (){\r\n        axios.get(config.preUrl+'games/').then(response => {\r\n            console.log(response.data.games)\r\n            showPlayers(response.data.games)\r\n        }) \r\n    }\r\n     \r\n    // Anzeige der Spielerliste in einer HTML-Struktur\r\n    return(\r\n        <div>\r\n            Spieler: \r\n            <div>{players}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Players\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACvB;EACA,MAAMC,UAAU,GAAGD,KAAK,CAACE,KAAzB,CAFuB,CAEQ;;EAC/B,MAAMC,MAAM,GAAGH,KAAK,CAACI,GAArB,CAHuB,CAGE;;EACzB,MAAM,CAACC,OAAD,EAAWC,UAAX,IAAyBX,QAAQ,EAAvC,CAJuB,CAImB;EAE1C;;EACAC,SAAS,CAAC,MAAM;IACZW,WAAW,GADC,CACE;EACjB,CAFQ,EAEN,EAFM,CAAT,CAPuB,CAWvB;;EACA,SAASC,WAAT,CAAqBC,QAArB,EAA8B;IAC1B,IAAIC,KAAK,GAAG,CAAZ;;IACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,QAAQ,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;MACpC,IAAIF,QAAQ,CAACE,CAAD,CAAR,CAAYE,EAAZ,IAAkBV,MAAtB,EAA6B;QACzBO,KAAK,GAAGC,CAAR;MACH;IACJ;;IACD,IAAIN,OAAO,GAAGI,QAAQ,CAACC,KAAD,CAAR,CAAgBL,OAA9B;IACA,IAAIS,KAAK,GAAG,EAAZ;IACAA,KAAK,CAACC,IAAN,eAAW;MAAA;IAAA,GAAQ,IAAR;MAAA;MAAA;MAAA;IAAA,QAAX;IACAD,KAAK,CAACC,IAAN,CAAWV,OAAO,CAACW,GAAR,CAAaC,IAAD,iBAAW;MAAA,kBAAuBA,IAAI,CAACC,IAA5B;IAAA,GAAUD,IAAI,CAACJ,EAAf;MAAA;MAAA;MAAA;IAAA,QAAvB,CAAX;IACAP,UAAU,CAACQ,KAAD,CAAV;EACH,CAxBsB,CA0BvB;;;EACA,SAASP,WAAT,GAAuB;IACnBV,KAAK,CAACsB,GAAN,CAAUrB,MAAM,CAACsB,MAAP,GAAc,QAAxB,EAAkCC,IAAlC,CAAuCC,QAAQ,IAAI;MAC/CC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,KAA1B;MACAlB,WAAW,CAACc,QAAQ,CAACG,IAAT,CAAcC,KAAf,CAAX;IACH,CAHD;EAIH,CAhCsB,CAkCvB;;;EACA,oBACI;IAAA,oCAEI;MAAA,UAAMrB;IAAN;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAzCD;;GAAMN,O;;KAAAA,O;AA2CN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}